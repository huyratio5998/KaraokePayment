// <auto-generated />
using System;
using KaraokePayment.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace KaraokePayment.Data.Migrations
{
    [DbContext(typeof(KaraokeDbContext))]
    [Migration("20210722005920_add-data")]
    partial class adddata
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("KaraokePayment.Data.Entity.BookPhongOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("KhachHangId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("NhanVienCaLVId")
                        .HasColumnType("int");

                    b.Property<decimal>("TongTT")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KhachHangId");

                    b.HasIndex("NhanVienCaLVId");

                    b.ToTable("BookPhongOrder");
                });

            modelBuilder.Entity("KaraokePayment.Data.Entity.BookPhongOrderPhong", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BookPhongOrderId")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgaySua")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<int>("NhanVienBook1Id")
                        .HasColumnType("int");

                    b.Property<int>("NhanVienBook2Id")
                        .HasColumnType("int");

                    b.Property<int>("PhongId")
                        .HasColumnType("int");

                    b.Property<string>("PhuongThucTT")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ThoiGianBatDau")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ThoiGianKetThuc")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("TongTien")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BookPhongOrderId");

                    b.HasIndex("PhongId");

                    b.ToTable("BookPhongOrderPhong");
                });

            modelBuilder.Entity("KaraokePayment.Data.Entity.CaLV", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Den")
                        .HasColumnType("float");

                    b.Property<double>("HeSoLuong")
                        .HasColumnType("float");

                    b.Property<string>("TenCa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Tu")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("CaLV");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Den = 11.0,
                            HeSoLuong = 1.0,
                            TenCa = "Ca 1",
                            Tu = 7.0
                        },
                        new
                        {
                            Id = 2,
                            Den = 18.0,
                            HeSoLuong = 1.0,
                            TenCa = "Ca 2",
                            Tu = 11.0
                        },
                        new
                        {
                            Id = 3,
                            Den = 22.0,
                            HeSoLuong = 1.5,
                            TenCa = "Ca 3",
                            Tu = 18.0
                        },
                        new
                        {
                            Id = 4,
                            Den = 2.0,
                            HeSoLuong = 2.0,
                            TenCa = "Ca 4",
                            Tu = 22.0
                        });
                });

            modelBuilder.Entity("KaraokePayment.Data.Entity.DiaChi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Huyen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tinh")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DiaChi");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Huyen = "Nam Sach",
                            Tinh = "Hai Duong"
                        },
                        new
                        {
                            Id = 2,
                            Huyen = "Tan Trieu",
                            Tinh = "Ha Noi"
                        },
                        new
                        {
                            Id = 3,
                            Huyen = "Ha Dong",
                            Tinh = "Ha Noi"
                        },
                        new
                        {
                            Id = 4,
                            Huyen = "Nam Tan",
                            Tinh = "Hai Duong"
                        },
                        new
                        {
                            Id = 5,
                            Huyen = "Cam Giang",
                            Tinh = "Hai Duong"
                        });
                });

            modelBuilder.Entity("KaraokePayment.Data.Entity.HangHoa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Gia")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("HanSuDung")
                        .HasColumnType("datetime2");

                    b.Property<string>("HangHoaImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaHH")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgayNhap")
                        .HasColumnType("datetime2");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.Property<string>("Ten")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("HangHoa");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Gia = 10000m,
                            HanSuDung = new DateTime(2022, 9, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MaHH = "HH001",
                            NgayNhap = new DateTime(2021, 5, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SoLuong = 50,
                            Ten = "Bim Bim Oshi Cay"
                        },
                        new
                        {
                            Id = 2,
                            Gia = 20000m,
                            HanSuDung = new DateTime(2022, 9, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MaHH = "HH002",
                            NgayNhap = new DateTime(2021, 5, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SoLuong = 50,
                            Ten = "Dia Hoa Qua"
                        },
                        new
                        {
                            Id = 3,
                            Gia = 20000m,
                            HanSuDung = new DateTime(2022, 9, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MaHH = "HH003",
                            NgayNhap = new DateTime(2021, 5, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SoLuong = 50,
                            Ten = "Bim Bim Ostar"
                        },
                        new
                        {
                            Id = 4,
                            Gia = 40000m,
                            HanSuDung = new DateTime(2022, 9, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MaHH = "HH004",
                            NgayNhap = new DateTime(2021, 5, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SoLuong = 1000,
                            Ten = "Bia Sai Gon"
                        },
                        new
                        {
                            Id = 5,
                            Gia = 45000m,
                            HanSuDung = new DateTime(2022, 9, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MaHH = "HH005",
                            NgayNhap = new DateTime(2021, 5, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SoLuong = 1000,
                            Ten = "Bia Heineken"
                        });
                });

            modelBuilder.Entity("KaraokePayment.Data.Entity.NhanVienCaLV", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CaLvId")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayLV")
                        .HasColumnType("datetime2");

                    b.Property<string>("NhanVienId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("CaLvId");

                    b.HasIndex("NhanVienId");

                    b.ToTable("NhanVienCaLV");
                });

            modelBuilder.Entity("KaraokePayment.Data.Entity.Phong", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CoPhong")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Gia")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsVIP")
                        .HasColumnType("bit");

                    b.Property<string>("TenPhong")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Phong");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CoPhong = "small",
                            Gia = 150000m,
                            IsVIP = false,
                            TenPhong = "P 101",
                            TrangThai = 0
                        },
                        new
                        {
                            Id = 2,
                            CoPhong = "small",
                            Gia = 300000m,
                            IsVIP = true,
                            TenPhong = "P 102",
                            TrangThai = 0
                        },
                        new
                        {
                            Id = 3,
                            CoPhong = "small",
                            Gia = 150000m,
                            IsVIP = false,
                            TenPhong = "P 103",
                            TrangThai = 0
                        },
                        new
                        {
                            Id = 4,
                            CoPhong = "medium",
                            Gia = 300000m,
                            IsVIP = false,
                            TenPhong = "P 201",
                            TrangThai = 0
                        },
                        new
                        {
                            Id = 5,
                            CoPhong = "medium",
                            Gia = 600000m,
                            IsVIP = true,
                            TenPhong = "P 202",
                            TrangThai = 0
                        },
                        new
                        {
                            Id = 6,
                            CoPhong = "medium",
                            Gia = 300000m,
                            IsVIP = false,
                            TenPhong = "P 203",
                            TrangThai = 0
                        },
                        new
                        {
                            Id = 7,
                            CoPhong = "big",
                            Gia = 600000m,
                            IsVIP = false,
                            TenPhong = "P 301",
                            TrangThai = 0
                        },
                        new
                        {
                            Id = 8,
                            CoPhong = "big",
                            Gia = 1200000m,
                            IsVIP = true,
                            TenPhong = "P 302",
                            TrangThai = 0
                        },
                        new
                        {
                            Id = 9,
                            CoPhong = "big",
                            Gia = 600000m,
                            IsVIP = false,
                            TenPhong = "P 303",
                            TrangThai = 0
                        });
                });

            modelBuilder.Entity("KaraokePayment.Data.Entity.ThemHangHoa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BookPhongOrderPhongId")
                        .HasColumnType("int");

                    b.Property<int>("HangHoaId")
                        .HasColumnType("int");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BookPhongOrderPhongId");

                    b.HasIndex("HangHoaId");

                    b.ToTable("ThemHangHoa");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");

                    b.HasDiscriminator<string>("Discriminator").HasValue("IdentityUser");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("KaraokePayment.Data.Entity.KhachHang", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityUser");

                    b.Property<string>("CMT")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiaChiChiTiet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DiaChiId")
                        .HasColumnType("int");

                    b.Property<string>("Ho")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsVIP")
                        .HasColumnType("bit");

                    b.Property<string>("MaKH")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgaySinh")
                        .HasColumnType("datetime2");

                    b.Property<string>("SDT")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ten")
                        .HasColumnType("nvarchar(max)");

                    b.HasIndex("DiaChiId");

                    b.HasDiscriminator().HasValue("KhachHang");

                    b.HasData(
                        new
                        {
                            Id = "3f3eadcb-9451-4611-a547-2149eef0b16c",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "01126a37-9a86-49ad-82f1-66a5f49f67b0",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "dba5a001-397f-42cb-a445-14ef0bcf093c",
                            TwoFactorEnabled = false,
                            Ho = "Ngo Ba",
                            IsVIP = true,
                            MaKH = "KH001",
                            NgaySinh = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SDT = "0665324444",
                            Ten = "Hung"
                        },
                        new
                        {
                            Id = "314791f2-fe23-4057-ae41-eaa6378e9fcd",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "36ebf476-edac-4103-8592-1ae0be47dc45",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "e6624364-3f99-4994-a76f-1f8ddbd83cac",
                            TwoFactorEnabled = false,
                            Ho = "Kieu Dang",
                            IsVIP = false,
                            MaKH = "KH002",
                            NgaySinh = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SDT = "0554513222",
                            Ten = "Thang"
                        },
                        new
                        {
                            Id = "e0c931ef-cd0b-4717-bda4-bf182af505ff",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "2957f0f2-e018-4d55-836f-ed0e197f355c",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "025dc734-23da-447f-bf09-84047d92a1f0",
                            TwoFactorEnabled = false,
                            Ho = "Nguyen Chung",
                            IsVIP = true,
                            MaKH = "KH003",
                            NgaySinh = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SDT = "09999999",
                            Ten = "Dung"
                        },
                        new
                        {
                            Id = "9eb94a67-ad50-45c0-8591-20a700215e2f",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "83041f9b-f038-4cff-815f-55b28801bc04",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "daae5de7-0eae-40fd-b91e-fcc213bb1851",
                            TwoFactorEnabled = false,
                            Ho = "Ngo Ba",
                            IsVIP = false,
                            MaKH = "KH004",
                            NgaySinh = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SDT = "065332255",
                            Ten = "Duc"
                        },
                        new
                        {
                            Id = "dee766dd-f986-4e3c-bf21-5339a002cd15",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "02dc52d3-23b0-4eaf-8c38-34a975f32e55",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "1544d26d-d301-4ff0-bbb0-525913caacfa",
                            TwoFactorEnabled = false,
                            Ho = "Ngo Ba",
                            IsVIP = false,
                            MaKH = "KH005",
                            NgaySinh = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SDT = "0977470999",
                            Ten = "Nam"
                        });
                });

            modelBuilder.Entity("KaraokePayment.Data.Entity.NhanVien", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityUser");

                    b.Property<string>("CMT")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiaChiChiTiet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DiaChiId")
                        .HasColumnName("NhanVien_DiaChiId")
                        .HasColumnType("int");

                    b.Property<string>("Ho")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LoaiNV")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Luong")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("MaNV")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgaySinh")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("SDT")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ten")
                        .HasColumnType("nvarchar(max)");

                    b.HasIndex("DiaChiId");

                    b.HasDiscriminator().HasValue("NhanVien");

                    b.HasData(
                        new
                        {
                            Id = "4d6eaa33-90b5-42b4-8ece-a14d85942093",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "42b3e0f1-5d0a-451d-a9dc-24491a9f49a6",
                            Email = "huynguyen98.clc@gmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "69634fa1-17e1-4bae-b45b-839f8adb3e94",
                            TwoFactorEnabled = false,
                            CMT = "142829244",
                            DiaChiChiTiet = "10N01 - khu tai dinh cu",
                            Ho = "Nguyen Van",
                            LoaiNV = "phucvu",
                            Luong = 10000000m,
                            MaNV = "NV001",
                            NgaySinh = new DateTime(1998, 9, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NgayTao = new DateTime(2020, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SDT = "0977470992",
                            Ten = "Huy"
                        },
                        new
                        {
                            Id = "a56d36ff-4d3c-4f45-80cc-190ebc0562dd",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "9ec415af-9cb8-449e-8831-022690bc12aa",
                            Email = "hung@gmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "1da8f6e0-db7a-4919-9ef6-e5168f9fceec",
                            TwoFactorEnabled = false,
                            CMT = "123456789",
                            DiaChiChiTiet = "khu tai dinh cu",
                            Ho = "Nguyen Van",
                            LoaiNV = "phucvu",
                            Luong = 9000000m,
                            MaNV = "NV002",
                            NgaySinh = new DateTime(1998, 9, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NgayTao = new DateTime(2020, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SDT = "099457645",
                            Ten = "Hung"
                        },
                        new
                        {
                            Id = "5f804eb9-34a7-4d4a-825e-0f5c4afad89d",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "c8db10bb-bbab-472b-b5d8-5c590c70a5d9",
                            Email = "duc@gmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "056f42f3-7000-419f-a260-e3718b8958b7",
                            TwoFactorEnabled = false,
                            CMT = "115487982",
                            DiaChiChiTiet = "khu tai dinh cu",
                            Ho = "Nguyen Minh",
                            LoaiNV = "phucvu",
                            Luong = 9000000m,
                            MaNV = "NV003",
                            NgaySinh = new DateTime(1998, 9, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NgayTao = new DateTime(2020, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SDT = "031231232",
                            Ten = "Duc"
                        },
                        new
                        {
                            Id = "9e769695-9331-4da9-8dd0-19ad18fbfb62",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "72eeaeb6-3eff-4a1f-8a29-781735dc8c53",
                            Email = "thang@gmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "1f51f963-32be-42b8-a4d4-588536b3e10d",
                            TwoFactorEnabled = false,
                            CMT = "465487982",
                            DiaChiChiTiet = "khu tai dinh cu",
                            Ho = "Nguyen Minh",
                            LoaiNV = "phucvu",
                            Luong = 9000000m,
                            MaNV = "NV004",
                            NgaySinh = new DateTime(1998, 9, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NgayTao = new DateTime(2020, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SDT = "031231232",
                            Ten = "Thang"
                        },
                        new
                        {
                            Id = "587efee0-853a-4b4f-b9be-095e0304d6e1",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "816caed1-96de-4bcf-b684-a94ea0907f0a",
                            Email = "lannp@gmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "ba0ac5f6-30f3-4c26-8b64-14736c53596b",
                            TwoFactorEnabled = false,
                            CMT = "213123123",
                            DiaChiChiTiet = "khu tai dinh cu",
                            Ho = "Ngo Phuong",
                            LoaiNV = "phucvu",
                            Luong = 9000000m,
                            MaNV = "NV005",
                            NgaySinh = new DateTime(1998, 2, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NgayTao = new DateTime(2020, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SDT = "0989456122",
                            Ten = "Lan"
                        });
                });

            modelBuilder.Entity("KaraokePayment.Data.Entity.BookPhongOrder", b =>
                {
                    b.HasOne("KaraokePayment.Data.Entity.KhachHang", "KhachHang")
                        .WithMany("BookPhongOrder")
                        .HasForeignKey("KhachHangId");

                    b.HasOne("KaraokePayment.Data.Entity.NhanVienCaLV", "NhanVienCaLV")
                        .WithMany("BookPhongOrder")
                        .HasForeignKey("NhanVienCaLVId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("KaraokePayment.Data.Entity.BookPhongOrderPhong", b =>
                {
                    b.HasOne("KaraokePayment.Data.Entity.BookPhongOrder", "BookPhongOrder")
                        .WithMany()
                        .HasForeignKey("BookPhongOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KaraokePayment.Data.Entity.Phong", "Phong")
                        .WithMany("BookphjoBookPhongOrderPhong")
                        .HasForeignKey("PhongId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("KaraokePayment.Data.Entity.NhanVienCaLV", b =>
                {
                    b.HasOne("KaraokePayment.Data.Entity.CaLV", "CaLv")
                        .WithMany("NhanVienCaLv")
                        .HasForeignKey("CaLvId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KaraokePayment.Data.Entity.NhanVien", "NhanVien")
                        .WithMany("NhanVienCaLv")
                        .HasForeignKey("NhanVienId");
                });

            modelBuilder.Entity("KaraokePayment.Data.Entity.ThemHangHoa", b =>
                {
                    b.HasOne("KaraokePayment.Data.Entity.BookPhongOrderPhong", "BookPhongOrderPhong")
                        .WithMany("ThemHangHoa")
                        .HasForeignKey("BookPhongOrderPhongId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KaraokePayment.Data.Entity.HangHoa", "HangHoa")
                        .WithMany("ThemHangHoa")
                        .HasForeignKey("HangHoaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("KaraokePayment.Data.Entity.KhachHang", b =>
                {
                    b.HasOne("KaraokePayment.Data.Entity.DiaChi", "DiaChi")
                        .WithMany()
                        .HasForeignKey("DiaChiId");
                });

            modelBuilder.Entity("KaraokePayment.Data.Entity.NhanVien", b =>
                {
                    b.HasOne("KaraokePayment.Data.Entity.DiaChi", "DiaChi")
                        .WithMany()
                        .HasForeignKey("DiaChiId");
                });
#pragma warning restore 612, 618
        }
    }
}
